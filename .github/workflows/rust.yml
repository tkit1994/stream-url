name: Rust

on:
  push:
    branches: ["master", "test"]
    tags: ["v*"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: "aarch64-unknown-linux-gnu"
          - os: ubuntu-latest
            target: "x86_64-unknown-linux-gnu"
          - os: windows-latest
            target: "x86_64-pc-windows-msvc"
    steps:
      - name: install gcc-aarch64
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt-get -y install gcc-aarch64-linux-gnu

      - uses: actions/checkout@v3

      - name: setup rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{matrix.target}}
          profile: minimal
          default: true

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{matrix.target}}

      - name: Build
        run: cargo build -r --target ${{matrix.target}}

      - name: Upload artifacts for linux
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: stream-url-${{matrix.target}}
          path: target/${{matrix.target}}/release/stream-url

      - name: Upload artifacts for windows
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: stream-url-${{matrix.target}}
          path: target/${{matrix.target}}/release/stream-url.exe

      - name: Get tag
        if: "startsWith(github.ref, 'refs/tags/')"
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Archive binary for windows
        if: "startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'"
        run: |
          cd target/${{ matrix.target }}/release
          7z a stream-url-${{ steps.tag.outputs.tag }}.${{ matrix.target }}.zip stream-url.exe
      - name: Archive binary for linux
        if: "startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'"
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf stream-url-${{ steps.tag.outputs.tag }}.${{ matrix.target }}.tar.gz stream-url

      - name: Upload package to GitHub Release
        uses: softprops/action-gh-release@v1
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          files: |
            target/${{matrix.target}}/release/*.zip
            target/${{matrix.target}}/release/*.tar.gz
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true
