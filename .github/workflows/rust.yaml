name: CI
on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  lints:
    name: lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@main

      - name: Run cargo fmt
        uses: actions-rs/cargo@master
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@master
        with:
          command: clippy
          args: -- -D warnings

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - armv7-unknown-linux-gnueabihf
          - arm-unknown-linux-gnueabihf
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl
          - armv7-unknown-linux-musleabihf
          - arm-unknown-linux-musleabihf

    steps:
      - uses: actions/checkout@main

      - uses: Swatinem/rust-cache@master
        with:
          shared-key: ${{matrix.target}}

      - uses: actions-rs/cargo@master
        with:
          use-cross: true
          command: build
          args: --release --all --target ${{matrix.target}}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.target}}
          path: |
            target/${{matrix.target}}/release/server
            target/${{matrix.target}}/release/server.exe
            target/${{matrix.target}}/release/cli
            target/${{matrix.target}}/release/cli.exe

  docker:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    needs:
      - build
      - lints
    steps:
      - uses: actions/checkout@main

      - uses: actions/download-artifact@v3
        with:
          name: aarch64-unknown-linux-musl
          path: arm64

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-musl
          path: amd64

      - uses: actions/download-artifact@v3
        with:
          name: armv7-unknown-linux-musleabihf
          path: armv7

      - uses: actions/download-artifact@v3
        with:
          name: arm-unknown-linux-musleabihf
          path: armv6

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            tkit1994/stream-url
            ghcr.io/tkit1994/stream-url
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: docker build
        uses: docker/build-push-action@master
        with:
          context: .
          push: true
          platforms: |
            linux/arm64
            linux/amd64
            linux/arm/v7
            linux/arm/v6
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs:
      - build
      - lints
    steps:
      - uses: actions/checkout@main

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Dowload release files
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Archive release files
        run: |
          cd artifacts
          for dirname in *; do
            pushd ${dirname}
            tar czvf stream-url-${{ steps.tag.outputs.tag }}.${dirname}.tar.gz *
            popd
          done
          find . -name '*.tar.gz' | xargs -i mv {} ${GITHUB_WORKSPACE}

      - name: Upload package to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "*.tar.gz"
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true
